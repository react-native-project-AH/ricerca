{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ak\\\\ricerca\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport * as imagePicker from \"expo-image-picker\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  useEffect(function () {\n    console.log(imagePicker);\n\n    var _imagePicker$requestM = imagePicker.requestMediaLibraryPermissionsAsync().then(function (response) {\n      console.log(response);\n    }),\n        status = _imagePicker$requestM.status;\n\n    if (status !== \"granted\") {\n      alert(\"not allow\");\n    }\n  }, []);\n\n  function uploadImage() {\n    var option, result;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            option = {};\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(imagePicker.launchImageLibraryAsync({\n              mediaTypes: imagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"img\", result.uri));\n\n          case 6:\n            console.log(result.uri);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Upload Photo\",\n    onPress: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Saving\",\n    onPress: testing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }));\n}\n\nfunction testing() {\n  return _regeneratorRuntime.async(function testing$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          try {\n            AsyncStorage.setItem(\"ah\", \"test123\");\n          } catch (error) {\n            console.log(\"Erooooooooor\");\n          }\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/ak/ricerca/App.js"],"names":["StatusBar","React","useEffect","useState","AsyncStorage","imagePicker","App","image","setImage","console","log","requestMediaLibraryPermissionsAsync","then","response","status","alert","uploadImage","option","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","setItem","uri","cancelled","styles","container","testing","width","height","error","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useEffect,useState} from 'react';\nimport { Button,Image,StyleSheet, Text, View,Platform ,AsyncStorage} from 'react-native';\nimport * as imagePicker from \"expo-image-picker\"\nexport default function App() {\nconst [image,setImage]=useState()\n    useEffect(()=>{\nconsole.log(imagePicker)\n        const {status}=  imagePicker.requestMediaLibraryPermissionsAsync().then((response=>{\n            console.log(response)\n        }))\n       if(status !==\"granted\") {\n           alert(\"not allow\")\n       }\n    },[])\n async function uploadImage(){\n        const option={}\n        let result= await imagePicker.launchImageLibraryAsync({\n            mediaTypes:imagePicker.MediaTypeOptions.All,\n            allowsEditing:true,\n            aspect:[4,3],\n            quality:1\n\n        })\n      await  AsyncStorage.setItem(\"img\",result.uri)\n     console.log(result.uri)\n     if(!result.cancelled){\n         setImage(result.uri)\n     }\n  }\n\n\n  return (\n    <View style={styles.container}>\n      {/*<Text>Open up App.js to start working on your app!</Text>*/}\n      <Button title=\"Upload Photo\" onPress={uploadImage}/>\n        <Button title=\"Saving\" onPress={testing} />\n      <StatusBar style=\"auto\" />\n        {image && <Image source={{uri:image}} style={{\n            width:200,\n            height:200\n\n        }}/>}\n    </View>\n  );\n}\nasync function testing(){\n    try {\n        AsyncStorage.setItem(\"ah\",\"test123\")\n    }catch (error){\n        console.log(\"Erooooooooor\")\n    }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}