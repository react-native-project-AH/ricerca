{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\ricerca\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as imagePicker from \"expo-image-picker\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  console.log(image);\n  useEffect(function () {\n    var _imagePicker$requestM = imagePicker.requestMediaLibraryPermissionsAsync(),\n        status = _imagePicker$requestM.status;\n\n    if (status !== \"granted\") {\n      alert(\"not allow\");\n    }\n\n    function loadData() {\n      var imageUri;\n      return _regeneratorRuntime.async(function loadData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"img\"));\n\n            case 2:\n              imageUri = _context.sent;\n              setImage(JSON.parse(imageUri));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadData();\n  }, []);\n\n  function uploadImage() {\n    var option, result;\n    return _regeneratorRuntime.async(function uploadImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            option = {};\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(imagePicker.launchImageLibraryAsync({\n              mediaTypes: imagePicker.MediaTypeOptions.All,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context2.sent;\n            setImage([].concat(_toConsumableArray(image), [result.uri]));\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"img\", JSON.stringify(image)));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Upload Photo\",\n    onPress: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Saving\",\n    onPress: testing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"load\",\n    onPress: getItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), image.length ? React.createElement(React.Fragment, null, image.map(function (e, index) {\n    return e && React.createElement(Image, {\n      key: index,\n      source: {\n        uri: e\n      },\n      style: {\n        width: 200,\n        height: 200\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }\n    });\n  })) : null);\n}\n\nfunction getItem() {\n  var e;\n  return _regeneratorRuntime.async(function getItem$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"ah\"));\n\n        case 3:\n          e = _context3.sent;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(console.log(e.JSON.parse()));\n\n        case 6:\n          _context3.next = 11;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n}\n\nfunction testing() {\n  var arr;\n  return _regeneratorRuntime.async(function testing$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          arr = [1, 2, 3, \"eeeee\"];\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"ah\", JSON.stringify(arr)));\n\n        case 4:\n          _context4.next = 9;\n          break;\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Home/Desktop/ricerca/App.js"],"names":["StatusBar","React","useEffect","useState","AsyncStorage","imagePicker","App","image","setImage","console","log","requestMediaLibraryPermissionsAsync","status","alert","loadData","getItem","imageUri","JSON","parse","uploadImage","option","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","aspect","quality","result","uri","setItem","stringify","styles","container","testing","length","map","e","index","width","height","arr","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Image, StyleSheet, Text, View, Platform } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as imagePicker from \"expo-image-picker\"\r\nexport default function App() {\r\n\r\n  const [image, setImage] = useState([])\r\nconsole.log(image)\r\n  useEffect(() => {\r\n    const { status } = imagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (status !== \"granted\") {\r\n      alert(\"not allow\")\r\n    }\r\n    async function loadData() {\r\n      const imageUri = await AsyncStorage.getItem(\"img\");\r\n      setImage(JSON.parse(imageUri));\r\n    }\r\n    loadData()\r\n  }, [])\r\n\r\n\r\n\r\n  async function uploadImage() {\r\n    const option = {}\r\n    let result = await imagePicker.launchImageLibraryAsync({\r\n      mediaTypes: imagePicker.MediaTypeOptions.All,\r\n      aspect: [4, 3],\r\n      quality: 1\r\n\r\n    })\r\n    setImage([...image, result.uri])\r\n    await AsyncStorage.setItem(\"img\", JSON.stringify(image))\r\n    // if (!result.cancelled) {\r\n    //   setImage(result.uri)\r\n    // }\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Button title=\"Upload Photo\" onPress={uploadImage} />\r\n      <Button title=\"Saving\" onPress={testing} />\r\n      <Button title=\"load\" onPress={getItem} />\r\n      <StatusBar style=\"auto\" />\r\n\r\n      {image.length ? <>\r\n        {image.map((e, index) => {\r\n\r\n          return (\r\n\r\n            e && <Image key={index} source={{ uri: e }} style={{\r\n              width: 200,\r\n              height: 200\r\n\r\n            }} />\r\n          )\r\n\r\n        })}\r\n      </> : null}\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nasync function getItem() {\r\n  try {\r\n    let e = await AsyncStorage.getItem(\"ah\")\r\n    await console.log(e.JSON.parse())\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n\r\n}\r\nasync function testing() {\r\n  try {\r\n    let arr = [1, 2, 3, \"eeeee\"]\r\n    await AsyncStorage.setItem(\"ah\", JSON.stringify(arr))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}