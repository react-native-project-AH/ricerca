{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ak\\\\ricerca\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImagePicker from \"expo-image-picker\";\nexport default function App() {\n  useEffect(function _callee() {\n    var _await$ImagePicker$re, status;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            status = _await$ImagePicker$re.status;\n\n            if (status !== \"granted\") {\n              alert(\"not allow\");\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  function uploadImage() {\n    var option, result;\n    return _regeneratorRuntime.async(function uploadImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            option = {};\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context2.sent;\n            console.log(result);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Upload Photo\",\n    onPress: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/ak/ricerca/App.js"],"names":["StatusBar","React","useEffect","ImagePicker","App","requestMediaLibraryPermissionsAsync","status","alert","uploadImage","option","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","aspect","quality","result","console","log","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;;;;;AAEA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,eAAe,SAASC,GAAT,GAAe;AAE1BF,EAAAA,SAAS,CAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACgBC,WAAW,CAACE,mCAAZ,EADhB;;AAAA;AAAA;AACCC,YAAAA,MADD,yBACCA,MADD;;AAEP,gBAAGA,MAAM,KAAI,SAAb,EAAwB;AACpBC,cAAAA,KAAK,CAAC,WAAD,CAAL;AACH;;AAJM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAKP,EALO,CAAT;;AAMH,WAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACaC,YAAAA,MADb,GACoB,EADpB;AAAA;AAAA,6CAEyBN,WAAW,CAACO,uBAAZ,CAAoC;AAClDC,cAAAA,UAAU,EAACR,WAAW,CAACS,gBAAZ,CAA6BC,GADU;AAElDC,cAAAA,MAAM,EAAC,CAAC,CAAD,EAAG,CAAH,CAF2C;AAGlDC,cAAAA,OAAO,EAAC;AAH0C,aAApC,CAFzB;;AAAA;AAEWC,YAAAA,MAFX;AAQIC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,OAAO,EAAEZ,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;AAED,IAAMW,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useEffect} from 'react';\nimport { Button,Image,StyleSheet, Text, View,Platform } from 'react-native';\nimport ImagePicker from \"expo-image-picker\"\nexport default function App() {\n\n    useEffect(async()=>{\n        const {status}= await ImagePicker.requestMediaLibraryPermissionsAsync()\n       if(status !==\"granted\") {\n           alert(\"not allow\")\n       }\n    },[])\n async function uploadImage(){\n        const option={}\n        let result= await ImagePicker.launchImageLibraryAsync({\n            mediaTypes:ImagePicker.MediaTypeOptions.All,\n            aspect:[4,3],\n            quality:1\n\n        })\n     console.log(result)\n  }\n\n  return (\n    <View style={styles.container}>\n      {/*<Text>Open up App.js to start working on your app!</Text>*/}\n      <Button title=\"Upload Photo\" onPress={uploadImage}/>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}