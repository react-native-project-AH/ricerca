{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Desktop\\\\ricerca\\\\components\\\\private\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useContext, useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as imagePicker from \"expo-image-picker\";\nimport { prepareDataForValidation } from 'formik';\nimport { PrivateContext } from \"../../context/valid\";\n\nfunction Private(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var validation = useContext(PrivateContext);\n  useEffect(function () {\n    var _imagePicker$requestM = imagePicker.requestMediaLibraryPermissionsAsync(),\n        status = _imagePicker$requestM.status;\n\n    function loadData() {\n      var imageUri, e;\n      return _regeneratorRuntime.async(function loadData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"img\"));\n\n            case 3:\n              imageUri = _context.sent;\n\n              if (imageUri.length) {\n                e = JSON.parse(imageUri);\n                setImage(e);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"useEfffect Error\", _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    }\n\n    loadData();\n  }, []);\n\n  function uploadImage() {\n    var option, result;\n    return _regeneratorRuntime.async(function uploadImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            option = {};\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(imagePicker.launchImageLibraryAsync({\n              mediaTypes: imagePicker.MediaTypeOptions.All,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context2.sent;\n            setImage([].concat(_toConsumableArray(image), [result.uri]));\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"img\", JSON.stringify([].concat(_toConsumableArray(image), [result.uri]))));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, React.createElement(Button, {\n    title: \"Back\",\n    onPress: function onPress() {\n      return validation.setValid(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }\n  }), React.createElement(Button, {\n    title: \"Upload Photo\",\n    onPress: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }), image.length ? React.createElement(React.Fragment, null, image.map(function (e, index) {\n    return e && React.createElement(Image, {\n      key: index,\n      source: {\n        uri: e\n      },\n      style: {\n        width: 200,\n        height: 200\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    });\n  })) : null);\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Private;","map":{"version":3,"sources":["C:/Users/Home/Desktop/ricerca/components/private/index.js"],"names":["StatusBar","React","useContext","useEffect","useState","AsyncStorage","imagePicker","prepareDataForValidation","PrivateContext","Private","props","image","setImage","validation","requestMediaLibraryPermissionsAsync","status","loadData","getItem","imageUri","length","e","JSON","parse","console","log","uploadImage","option","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","aspect","quality","result","uri","setItem","stringify","styles","container","setValid","map","index","width","height","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React,{useContext, useEffect,useState} from 'react';\r\nimport { Button,Image,StyleSheet, Text, View,Platform } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as imagePicker from \"expo-image-picker\"\r\nimport { prepareDataForValidation } from 'formik';\r\nimport {PrivateContext} from '../../context/valid';\r\n\r\nfunction Private (props){\r\n    const [image,setImage]=useState([])\r\n\r\n    const validation = useContext(PrivateContext);\r\n\r\n    useEffect(()=>{\r\n       const {status}=  imagePicker.requestMediaLibraryPermissionsAsync()\r\n   //    if(status !==\"granted\") {\r\n   //        alert(\"not allow\")\r\n   //    }\r\n        async function loadData(){\r\n          try {\r\n\r\n              const imageUri=await AsyncStorage.getItem(\"img\")\r\n              if(imageUri.length){\r\n              let e= JSON.parse(imageUri)\r\n         setImage(e)\r\n              }\r\n          }catch (e){\r\n              console.log(\"useEfffect Error\",e)\r\n          }\r\n\r\n        }\r\n        loadData()\r\n    },[])\r\nasync function uploadImage(){\r\n       const option={}\r\n       let result= await imagePicker.launchImageLibraryAsync({\r\n           mediaTypes:imagePicker.MediaTypeOptions.All,\r\n           aspect:[4,3],\r\n           quality:1\r\n\r\n       })\r\n    setImage([...image,result.uri])\r\n     await  AsyncStorage.setItem(\"img\",JSON.stringify([...image,result.uri]))\r\n\r\n\r\n }\r\n\r\n\r\n return (\r\n   <View style={styles.container}>\r\n       <Button title = \"Back\" onPress={()=> validation.setValid(false)}/>\r\n     <Button title=\"Upload Photo\" onPress={uploadImage}/>\r\n     <StatusBar style=\"auto\" />\r\n\r\n       {image.length ? <>\r\n           {image.map((e,index)=>{\r\n\r\n               return(\r\n\r\n                   e && <Image  key={index} source={{uri:e}} style={{\r\n                       width:200,\r\n                       height:200\r\n\r\n                   }}/>\r\n               )\r\n           })}\r\n           </> : null}\r\n   </View>\r\n );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  });\r\nexport default Private;"]},"metadata":{},"sourceType":"module"}