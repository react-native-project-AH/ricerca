{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ak\\\\ricerca\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as imagePicker from \"expo-image-picker\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  useEffect(function () {\n    console.log(imagePicker);\n\n    var _imagePicker$requestM = imagePicker.requestMediaLibraryPermissionsAsync(),\n        status = _imagePicker$requestM.status;\n\n    if (status !== \"granted\") {\n      alert(\"not allow\");\n    }\n\n    function loadData() {\n      var imageUri, e;\n      return _regeneratorRuntime.async(function loadData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"img\"));\n\n            case 3:\n              imageUri = _context.sent;\n              console.log(imageUri, \"eeeeeee\");\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(JSON.parse(imageUri));\n\n            case 7:\n              e = _context.sent;\n              setImage(e);\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(console.log(image, \"staaaaaaaaaaaaaaate\"));\n\n            case 11:\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"useEfffect Error\", _context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    }\n\n    loadData();\n  }, []);\n\n  function uploadImage() {\n    var option, result;\n    return _regeneratorRuntime.async(function uploadImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            option = {};\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(imagePicker.launchImageLibraryAsync({\n              mediaTypes: imagePicker.MediaTypeOptions.All,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context2.sent;\n            setImage([].concat(_toConsumableArray(image), [result.uri]));\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"img\", JSON.stringify(image)));\n\n          case 7:\n            console.log(result.uri);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Upload Photo\",\n    onPress: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Saving\",\n    onPress: testing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"load\",\n    onPress: getItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), image.length ? React.createElement(React.Fragment, null, image.map(function (e, index) {\n    return e && React.createElement(Image, {\n      key: index,\n      source: {\n        uri: e\n      },\n      style: {\n        width: 200,\n        height: 200\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 26\n      }\n    });\n  })) : null);\n}\n\nfunction getItem() {\n  var e;\n  return _regeneratorRuntime.async(function getItem$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"ah\"));\n\n        case 3:\n          e = _context3.sent;\n          console.log(JSON.parse(e));\n          _context3.next = 10;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"Erooooooooor\");\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\n\nfunction testing() {\n  var arr;\n  return _regeneratorRuntime.async(function testing$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          arr = [1, 2, 3, \"eeeee\"];\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"ah\", JSON.stringify(arr)));\n\n        case 4:\n          _context4.next = 9;\n          break;\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(\"Erooooooooor\");\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/ak/ricerca/App.js"],"names":["StatusBar","React","useEffect","useState","AsyncStorage","imagePicker","App","image","setImage","console","log","requestMediaLibraryPermissionsAsync","status","alert","loadData","getItem","imageUri","JSON","parse","e","uploadImage","option","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","aspect","quality","result","uri","setItem","stringify","cancelled","styles","container","testing","length","map","index","width","height","arr","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useEffect,useState} from 'react';\nimport { Button,Image,StyleSheet, Text, View,Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as imagePicker from \"expo-image-picker\"\nexport default function App() {\n\nconst [image,setImage]=useState([])\n     useEffect(()=>{\nconsole.log(imagePicker)\n        const {status}=  imagePicker.requestMediaLibraryPermissionsAsync()\n       if(status !==\"granted\") {\n           alert(\"not allow\")\n       }\n         async function loadData(){\n           try {\n               const imageUri=await AsyncStorage.getItem(\"img\")\n               console.log(imageUri,\"eeeeeee\")\n               let e=await JSON.parse(imageUri)\n          setImage(e)\n               await console.log(image,\"staaaaaaaaaaaaaaate\")\n\n           }catch (e){\n               console.log(\"useEfffect Error\",e)\n           }\n\n         }\n         loadData()\n     },[])\n async function uploadImage(){\n        const option={}\n        let result= await imagePicker.launchImageLibraryAsync({\n            mediaTypes:imagePicker.MediaTypeOptions.All,\n            aspect:[4,3],\n            quality:1\n\n        })\n     setImage([...image,result.uri])\n      await  AsyncStorage.setItem(\"img\",JSON.stringify(image))\n     console.log(result.uri)\n     if(!result.cancelled){\n         setImage(result.uri)\n     }\n  }\n\n\n  return (\n    <View style={styles.container}>\n      {/*<Text>Open up App.js to start working on your app!</Text>*/}\n      <Button title=\"Upload Photo\" onPress={uploadImage}/>\n        <Button title=\"Saving\" onPress={testing} />\n        <Button title=\"load\" onPress={getItem} />\n      <StatusBar style=\"auto\" />\n\n        {image.length ? <>\n            {image.map((e,index)=>{\n\n                return(\n\n                    e && <Image  key={index} source={{uri:e}} style={{\n                        width:200,\n                        height:200\n\n                    }}/>\n                )\n\n            })}\n            </> : null}\n\n    </View>\n  );\n}\n\nasync function getItem(){\n    try {\n      let e  = await AsyncStorage.getItem(\"ah\")\n        console.log(JSON.parse(e))\n    }catch (error){\n        console.log(\"Erooooooooor\")\n    }\n\n}\nasync function testing(){\n    try {\n        let arr=[1,2,3,\"eeeee\"]\n        await AsyncStorage.setItem(\"ah\",JSON.stringify(arr))\n    }catch (error){\n        console.log(\"Erooooooooor\")\n    }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}